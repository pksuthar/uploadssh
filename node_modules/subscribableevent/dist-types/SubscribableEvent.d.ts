/**
 * SubscribableEvent.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * A simple strongly-typed pub/sub/fire eventing system.
 */
export declare class SubscriptionToken {
    private _event;
    private _callback;
    constructor(_event: SubscribableEvent<any>, _callback: (...args: any[]) => boolean | void);
    unsubscribe(): void;
}
export default class SubscribableEvent<F extends {
    (...args: any[]): boolean | void;
}> {
    private _allowStopPropagation;
    private _subscribers;
    constructor(_allowStopPropagation?: boolean);
    dispose(): void;
    subscribe(callback: F): SubscriptionToken;
    unsubscribe(callback: F): void;
    fire: F;
}
